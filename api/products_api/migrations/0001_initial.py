# Generated by Django 2.1 on 2018-11-14 15:56

import cloudinary.models
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Имя продукта')),
                ('title_rus', models.CharField(max_length=120, verbose_name='Имя продукта НА РУССКОМ')),
                ('subtitle', models.CharField(help_text='Пример - "Напій ультрапастеризований гречаний 2,5% жиру"', max_length=255, verbose_name='Текст под названием продукта')),
                ('subtitle_rus', models.CharField(help_text='Пример - "Напій ультрапастеризований гречаний 2,5% жиру"', max_length=255, verbose_name='Текст под названием продукта НА РУССКОМ')),
                ('title_subtitle_color', models.CharField(max_length=7, verbose_name='Код цвета заголовка и подзаголовка (web HEX)')),
                ('image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Картинка')),
                ('cereal_image', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Картинка зерна')),
                ('image_for_product_page', cloudinary.models.CloudinaryField(max_length=255, verbose_name='Картинка для раздела Продукция')),
                ('inner_gradient_color', models.CharField(max_length=7, verbose_name='Код внутреннего цвета градиента (web HEX)')),
                ('outer_gradient_color', models.CharField(max_length=7, verbose_name='Код внешнего цвета градиента (web HEX)')),
                ('content', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), help_text='Каждый новый абзац с новой строки. Без пустых строк!', size=None, verbose_name='Основной текст')),
                ('content_rus', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), help_text='Каждый новый абзац с новой строки. Без пустых строк!', size=None, verbose_name='Основной текст НА РУССКОМ')),
                ('list_heading', models.CharField(max_length=255, verbose_name='Заголовок перед списком')),
                ('list_heading_rus', models.CharField(max_length=255, verbose_name='Заголовок перед списком НА РУССКОМ')),
                ('about_list', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, verbose_name='Элемент списка'), help_text='Каждый новый элемент с новой строки. Без пустых строк!', size=None, verbose_name='Список особенностецй продукта')),
                ('about_list_rus', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255, verbose_name='Элемент списка'), help_text='Каждый новый элемент с новой строки. Без пустых строк!', size=None, verbose_name='Список особенностецй продукта НА РУССКОМ')),
                ('silly_comment', models.CharField(max_length=255, verbose_name='Смешной заголовок под списком')),
                ('silly_comment_rus', models.CharField(max_length=255, verbose_name='Смешной заголовок под списком НА РУССКОМ')),
                ('calories', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Калории в ккал')),
                ('proteins', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Белки, г')),
                ('carbohydrates', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1)], verbose_name='Углеводы, г')),
                ('cholesterol', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Холестерин')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'db_table': 'products',
            },
        ),
    ]
